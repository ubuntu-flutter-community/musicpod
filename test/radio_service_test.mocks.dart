// Mocks generated by Mockito 5.4.6 from annotations
// in musicpod/test/radio_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter/material.dart' as _i4;
import 'package:media_kit/media_kit.dart' as _i3;
import 'package:media_kit_video/media_kit_video.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:musicpod/common/data/audio.dart' as _i7;
import 'package:musicpod/common/data/audio_type.dart' as _i9;
import 'package:musicpod/expose/expose_service.dart' as _i11;
import 'package:musicpod/player/player_service.dart' as _i5;
import 'package:musicpod/radio/online_art_service.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeVideoController_0 extends _i1.SmartFake
    implements _i2.VideoController {
  _FakeVideoController_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePlayer_1 extends _i1.SmartFake implements _i3.Player {
  _FakePlayer_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeValueNotifier_2<T> extends _i1.SmartFake
    implements _i4.ValueNotifier<T> {
  _FakeValueNotifier_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PlayerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlayerService extends _i1.Mock implements _i5.PlayerService {
  MockPlayerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.VideoController get controller =>
      (super.noSuchMethod(
            Invocation.getter(#controller),
            returnValue: _FakeVideoController_0(
              this,
              Invocation.getter(#controller),
            ),
          )
          as _i2.VideoController);

  @override
  _i3.Player get player =>
      (super.noSuchMethod(
            Invocation.getter(#player),
            returnValue: _FakePlayer_1(this, Invocation.getter(#player)),
          )
          as _i3.Player);

  @override
  _i6.Stream<bool> get propertiesChanged =>
      (super.noSuchMethod(
            Invocation.getter(#propertiesChanged),
            returnValue: _i6.Stream<bool>.empty(),
          )
          as _i6.Stream<bool>);

  @override
  ({List<_i7.Audio> audios, String name}) get queue =>
      (super.noSuchMethod(
            Invocation.getter(#queue),
            returnValue: (
              audios: <_i7.Audio>[],
              name: _i8.dummyValue<String>(this, Invocation.getter(#queue)),
            ),
          )
          as ({List<_i7.Audio> audios, String name}));

  @override
  bool get isPlaying =>
      (super.noSuchMethod(Invocation.getter(#isPlaying), returnValue: false)
          as bool);

  @override
  bool get repeatSingle =>
      (super.noSuchMethod(Invocation.getter(#repeatSingle), returnValue: false)
          as bool);

  @override
  bool get shuffle =>
      (super.noSuchMethod(Invocation.getter(#shuffle), returnValue: false)
          as bool);

  @override
  double get rate =>
      (super.noSuchMethod(Invocation.getter(#rate), returnValue: 0.0)
          as double);

  @override
  Map<String, Duration> get lastPositions =>
      (super.noSuchMethod(
            Invocation.getter(#lastPositions),
            returnValue: <String, Duration>{},
          )
          as Map<String, Duration>);

  @override
  set nextAudio(_i7.Audio? value) => super.noSuchMethod(
    Invocation.setter(#nextAudio, value),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void setQueue(({List<_i7.Audio> audios, String name})? value) =>
      super.noSuchMethod(
        Invocation.method(#setQueue, [value]),
        returnValueForMissingStub: null,
      );

  @override
  void clearQueue() => super.noSuchMethod(
    Invocation.method(#clearQueue, []),
    returnValueForMissingStub: null,
  );

  @override
  void setIsPlaying(bool? value) => super.noSuchMethod(
    Invocation.method(#setIsPlaying, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setDuration(Duration? value) => super.noSuchMethod(
    Invocation.method(#setDuration, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setPosition(Duration? value) => super.noSuchMethod(
    Invocation.method(#setPosition, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setBuffer(Duration? value) => super.noSuchMethod(
    Invocation.method(#setBuffer, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setRepeatSingle(bool? value) => super.noSuchMethod(
    Invocation.method(#setRepeatSingle, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setShuffle(bool? value) => super.noSuchMethod(
    Invocation.method(#setShuffle, [value]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> setVolume(double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setVolume, [value]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> setRate(double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setRate, [value]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> playOrPause() =>
      (super.noSuchMethod(
            Invocation.method(#playOrPause, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> pause() =>
      (super.noSuchMethod(
            Invocation.method(#pause, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void setPauseTimer(Duration? duration) => super.noSuchMethod(
    Invocation.method(#setPauseTimer, [duration]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> seek() =>
      (super.noSuchMethod(
            Invocation.method(#seek, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> resume() =>
      (super.noSuchMethod(
            Invocation.method(#resume, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> playNext() =>
      (super.noSuchMethod(
            Invocation.method(#playNext, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void insertIntoQueue(List<_i7.Audio>? newAudios) => super.noSuchMethod(
    Invocation.method(#insertIntoQueue, [newAudios]),
    returnValueForMissingStub: null,
  );

  @override
  void moveAudioInQueue(int? oldIndex, int? newIndex) => super.noSuchMethod(
    Invocation.method(#moveAudioInQueue, [oldIndex, newIndex]),
    returnValueForMissingStub: null,
  );

  @override
  void remove(_i7.Audio? deleteMe) => super.noSuchMethod(
    Invocation.method(#remove, [deleteMe]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> playPrevious() =>
      (super.noSuchMethod(
            Invocation.method(#playPrevious, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> startPlaylist({
    required List<_i7.Audio>? audios,
    required String? listName,
    int? index,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startPlaylist, [], {
              #audios: audios,
              #listName: listName,
              #index: index,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> setRemoteImageUrl(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#setRemoteImageUrl, [url]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> setRemoteColorFromImageProvider(
    _i4.ImageProvider<Object>? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#setRemoteColorFromImageProvider, [provider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> addLastPosition(String? key, Duration? lastPosition) =>
      (super.noSuchMethod(
            Invocation.method(#addLastPosition, [key, lastPosition]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> safeAllLastPositions(List<_i7.Audio>? audios) =>
      (super.noSuchMethod(
            Invocation.method(#safeAllLastPositions, [audios]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> removeLastPosition(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#removeLastPosition, [key]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> removeLastPositions(List<_i7.Audio>? audios) =>
      (super.noSuchMethod(
            Invocation.method(#removeLastPositions, [audios]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> safeLastPosition() =>
      (super.noSuchMethod(
            Invocation.method(#safeLastPosition, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void registerMediaControlsCallBacks({
    required _i6.Future<void> Function({
      required _i9.AudioType? audioType,
      required bool isPlaying,
      required bool queueNotEmpty,
    })?
    onIsPlaying,
    required _i6.Future<void> Function({
      required Uri? artUri,
      required _i7.Audio audio,
    })?
    onSetMetaData,
    required _i6.Future<void> Function(Duration?)? onSetPosition,
    required _i6.Future<void> Function(Duration?)? onSetDuration,
  }) => super.noSuchMethod(
    Invocation.method(#registerMediaControlsCallBacks, [], {
      #onIsPlaying: onIsPlaying,
      #onSetMetaData: onSetMetaData,
      #onSetPosition: onSetPosition,
      #onSetDuration: onSetDuration,
    }),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> setMediaControlsMetaData({required _i7.Audio? audio}) =>
      (super.noSuchMethod(
            Invocation.method(#setMediaControlsMetaData, [], {#audio: audio}),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void playPath([String? path]) => super.noSuchMethod(
    Invocation.method(#playPath, [path]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [OnlineArtService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnlineArtService extends _i1.Mock implements _i10.OnlineArtService {
  MockOnlineArtService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<bool> get propertiesChanged =>
      (super.noSuchMethod(
            Invocation.getter(#propertiesChanged),
            returnValue: _i6.Stream<bool>.empty(),
          )
          as _i6.Stream<bool>);

  @override
  _i6.Stream<String?> get error =>
      (super.noSuchMethod(
            Invocation.getter(#error),
            returnValue: _i6.Stream<String?>.empty(),
          )
          as _i6.Stream<String?>);

  @override
  bool get dataSafeMode =>
      (super.noSuchMethod(Invocation.getter(#dataSafeMode), returnValue: false)
          as bool);

  @override
  void setDataSafeMode(bool? value) => super.noSuchMethod(
    Invocation.method(#setDataSafeMode, [value]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<String?> fetchAlbumArt(String? icyTitle) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAlbumArt, [icyTitle]),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  String? put({required String? key, String? url}) =>
      (super.noSuchMethod(Invocation.method(#put, [], {#key: key, #url: url}))
          as String?);

  @override
  _i6.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [ExposeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockExposeService extends _i1.Mock implements _i11.ExposeService {
  MockExposeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<String?> get discordErrorStream =>
      (super.noSuchMethod(
            Invocation.getter(#discordErrorStream),
            returnValue: _i6.Stream<String?>.empty(),
          )
          as _i6.Stream<String?>);

  @override
  _i6.Stream<bool> get isDiscordConnectedStream =>
      (super.noSuchMethod(
            Invocation.getter(#isDiscordConnectedStream),
            returnValue: _i6.Stream<bool>.empty(),
          )
          as _i6.Stream<bool>);

  @override
  bool get isDiscordConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isDiscordConnected),
            returnValue: false,
          )
          as bool);

  @override
  _i4.ValueNotifier<bool> get isLastFmAuthorized =>
      (super.noSuchMethod(
            Invocation.getter(#isLastFmAuthorized),
            returnValue: _FakeValueNotifier_2<bool>(
              this,
              Invocation.getter(#isLastFmAuthorized),
            ),
          )
          as _i4.ValueNotifier<bool>);

  @override
  _i6.Future<void> exposeTitleOnline({
    required String? title,
    required String? artist,
    required String? additionalInfo,
    String? imageUrl,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#exposeTitleOnline, [], {
              #title: title,
              #artist: artist,
              #additionalInfo: additionalInfo,
              #imageUrl: imageUrl,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void initListenBrains() => super.noSuchMethod(
    Invocation.method(#initListenBrains, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> connectToDiscord(bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#connectToDiscord, [value]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> authorizeLastFm({
    required String? apiKey,
    required String? apiSecret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#authorizeLastFm, [], {
              #apiKey: apiKey,
              #apiSecret: apiSecret,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}
