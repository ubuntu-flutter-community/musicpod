// Mocks generated by Mockito 5.4.6 from annotations
// in musicpod/test/podcast_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:musicpod/common/data/audio.dart' as _i8;
import 'package:musicpod/common/data/close_btn_action.dart' as _i6;
import 'package:musicpod/library/library_service.dart' as _i7;
import 'package:musicpod/notifications/notifications_service.dart' as _i2;
import 'package:musicpod/settings/settings_service.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NotificationsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationsService extends _i1.Mock
    implements _i2.NotificationsService {
  MockNotificationsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> notify({required String? message, String? uri}) =>
      (super.noSuchMethod(
            Invocation.method(#notify, [], {#message: message, #uri: uri}),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [SettingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsService extends _i1.Mock implements _i4.SettingsService {
  MockSettingsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<bool> get propertiesChanged =>
      (super.noSuchMethod(
            Invocation.getter(#propertiesChanged),
            returnValue: _i3.Stream<bool>.empty(),
          )
          as _i3.Stream<bool>);

  @override
  int get themeIndex =>
      (super.noSuchMethod(Invocation.getter(#themeIndex), returnValue: 0)
          as int);

  @override
  bool get useYaruTheme =>
      (super.noSuchMethod(Invocation.getter(#useYaruTheme), returnValue: false)
          as bool);

  @override
  bool get useCustomThemeColor =>
      (super.noSuchMethod(
            Invocation.getter(#useCustomThemeColor),
            returnValue: false,
          )
          as bool);

  @override
  int get iconSetIndex =>
      (super.noSuchMethod(Invocation.getter(#iconSetIndex), returnValue: 0)
          as int);

  @override
  int get localAudioIndex =>
      (super.noSuchMethod(Invocation.getter(#localAudioIndex), returnValue: 0)
          as int);

  @override
  bool get neverShowFailedImports =>
      (super.noSuchMethod(
            Invocation.getter(#neverShowFailedImports),
            returnValue: false,
          )
          as bool);

  @override
  bool get groupAlbumsOnlyByAlbumName =>
      (super.noSuchMethod(
            Invocation.getter(#groupAlbumsOnlyByAlbumName),
            returnValue: false,
          )
          as bool);

  @override
  bool get enableLastFmScrobbling =>
      (super.noSuchMethod(
            Invocation.getter(#enableLastFmScrobbling),
            returnValue: false,
          )
          as bool);

  @override
  bool get enableListenBrainzScrobbling =>
      (super.noSuchMethod(
            Invocation.getter(#enableListenBrainzScrobbling),
            returnValue: false,
          )
          as bool);

  @override
  bool get enableDiscordRPC =>
      (super.noSuchMethod(
            Invocation.getter(#enableDiscordRPC),
            returnValue: false,
          )
          as bool);

  @override
  bool get useMoreAnimations =>
      (super.noSuchMethod(
            Invocation.getter(#useMoreAnimations),
            returnValue: false,
          )
          as bool);

  @override
  bool get blurredPlayerBackground =>
      (super.noSuchMethod(
            Invocation.getter(#blurredPlayerBackground),
            returnValue: false,
          )
          as bool);

  @override
  bool get saveWindowSize =>
      (super.noSuchMethod(
            Invocation.getter(#saveWindowSize),
            returnValue: false,
          )
          as bool);

  @override
  bool get notifyDataSafeMode =>
      (super.noSuchMethod(
            Invocation.getter(#notifyDataSafeMode),
            returnValue: false,
          )
          as bool);

  @override
  bool get usePodcastIndex =>
      (super.noSuchMethod(
            Invocation.getter(#usePodcastIndex),
            returnValue: false,
          )
          as bool);

  @override
  String get forcedUpdateThreshold =>
      (super.noSuchMethod(
            Invocation.getter(#forcedUpdateThreshold),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#forcedUpdateThreshold),
            ),
          )
          as String);

  @override
  bool get showPositionDuration =>
      (super.noSuchMethod(
            Invocation.getter(#showPositionDuration),
            returnValue: false,
          )
          as bool);

  @override
  _i6.CloseBtnAction get closeBtnActionIndex =>
      (super.noSuchMethod(
            Invocation.getter(#closeBtnActionIndex),
            returnValue: _i6.CloseBtnAction.alwaysAsk,
          )
          as _i6.CloseBtnAction);

  @override
  bool notify(bool? saved) =>
      (super.noSuchMethod(
            Invocation.method(#notify, [saved]),
            returnValue: false,
          )
          as bool);

  @override
  void setThemeIndex(int? value) => super.noSuchMethod(
    Invocation.method(#setThemeIndex, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setUseYaruTheme(bool? value) => super.noSuchMethod(
    Invocation.method(#setUseYaruTheme, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setUseCustomThemeColor(bool? value) => super.noSuchMethod(
    Invocation.method(#setUseCustomThemeColor, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setCustomThemeColor(int? value) => super.noSuchMethod(
    Invocation.method(#setCustomThemeColor, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setIconSetIndex(int? value) => super.noSuchMethod(
    Invocation.method(#setIconSetIndex, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setLocalAudioIndex(int? value) => super.noSuchMethod(
    Invocation.method(#setLocalAudioIndex, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setNeverShowFailedImports(bool? value) => super.noSuchMethod(
    Invocation.method(#setNeverShowFailedImports, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setGroupAlbumsOnlyByAlbumName(bool? value) => super.noSuchMethod(
    Invocation.method(#setGroupAlbumsOnlyByAlbumName, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setEnableLastFmScrobbling(bool? value) => super.noSuchMethod(
    Invocation.method(#setEnableLastFmScrobbling, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setLastFmApiKey(String? value) => super.noSuchMethod(
    Invocation.method(#setLastFmApiKey, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setLastFmSecret(String? value) => super.noSuchMethod(
    Invocation.method(#setLastFmSecret, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setLastFmSessionKey(String? value) => super.noSuchMethod(
    Invocation.method(#setLastFmSessionKey, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setLastFmUsername(String? value) => super.noSuchMethod(
    Invocation.method(#setLastFmUsername, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setEnableListenBrainzScrobbling(bool? value) => super.noSuchMethod(
    Invocation.method(#setEnableListenBrainzScrobbling, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setListenBrainzApiKey(String? value) => super.noSuchMethod(
    Invocation.method(#setListenBrainzApiKey, [value]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<bool> setEnableDiscordRPC(bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setEnableDiscordRPC, [value]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  void setUseMoreAnimations(bool? value) => super.noSuchMethod(
    Invocation.method(#setUseMoreAnimations, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setBlurredPlayerBackground(bool? value) => super.noSuchMethod(
    Invocation.method(#setBlurredPlayerBackground, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setSaveWindowSize(bool? value) => super.noSuchMethod(
    Invocation.method(#setSaveWindowSize, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setNotifyDataSafeMode(bool? value) => super.noSuchMethod(
    Invocation.method(#setNotifyDataSafeMode, [value]),
    returnValueForMissingStub: null,
  );

  @override
  bool recentPatchNotesDisposed(String? version) =>
      (super.noSuchMethod(
            Invocation.method(#recentPatchNotesDisposed, [version]),
            returnValue: false,
          )
          as bool);

  @override
  _i3.Future<void> disposePatchNotes(String? version) =>
      (super.noSuchMethod(
            Invocation.method(#disposePatchNotes, [version]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setUsePodcastIndex(bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setUsePodcastIndex, [value]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void setPodcastIndexApiKey(String? value) => super.noSuchMethod(
    Invocation.method(#setPodcastIndexApiKey, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setPodcastIndexApiSecret(String? value) => super.noSuchMethod(
    Invocation.method(#setPodcastIndexApiSecret, [value]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<void> setDirectory(String? directory) =>
      (super.noSuchMethod(
            Invocation.method(#setDirectory, [directory]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setDownloadsCustomDir(String? directory) =>
      (super.noSuchMethod(
            Invocation.method(#setDownloadsCustomDir, [directory]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  bool getBackupSaved(String? version) =>
      (super.noSuchMethod(
            Invocation.method(#getBackupSaved, [version]),
            returnValue: false,
          )
          as bool);

  @override
  _i3.Future<void> setBackupSaved(String? version, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBackupSaved, [version, value]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setShowPositionDuration(bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setShowPositionDuration, [value]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void setCloseBtnActionIndex(_i6.CloseBtnAction? value) => super.noSuchMethod(
    Invocation.method(#setCloseBtnActionIndex, [value]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<void> wipeAllSettings() =>
      (super.noSuchMethod(
            Invocation.method(#wipeAllSettings, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [LibraryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLibraryService extends _i1.Mock implements _i7.LibraryService {
  MockLibraryService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<bool> get propertiesChanged =>
      (super.noSuchMethod(
            Invocation.getter(#propertiesChanged),
            returnValue: _i3.Stream<bool>.empty(),
          )
          as _i3.Stream<bool>);

  @override
  List<_i8.Audio> get likedAudios =>
      (super.noSuchMethod(
            Invocation.getter(#likedAudios),
            returnValue: <_i8.Audio>[],
          )
          as List<_i8.Audio>);

  @override
  int get likedAudiosLength =>
      (super.noSuchMethod(Invocation.getter(#likedAudiosLength), returnValue: 0)
          as int);

  @override
  List<String> get starredStations =>
      (super.noSuchMethod(
            Invocation.getter(#starredStations),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  int get starredStationsLength =>
      (super.noSuchMethod(
            Invocation.getter(#starredStationsLength),
            returnValue: 0,
          )
          as int);

  @override
  Set<String> get favRadioTags =>
      (super.noSuchMethod(
            Invocation.getter(#favRadioTags),
            returnValue: <String>{},
          )
          as Set<String>);

  @override
  Set<String> get favCountryCodes =>
      (super.noSuchMethod(
            Invocation.getter(#favCountryCodes),
            returnValue: <String>{},
          )
          as Set<String>);

  @override
  Set<String> get favLanguageCodes =>
      (super.noSuchMethod(
            Invocation.getter(#favLanguageCodes),
            returnValue: <String>{},
          )
          as Set<String>);

  @override
  List<String> get playlistIDs =>
      (super.noSuchMethod(
            Invocation.getter(#playlistIDs),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  Map<String, List<_i8.Audio>> get playlists =>
      (super.noSuchMethod(
            Invocation.getter(#playlists),
            returnValue: <String, List<_i8.Audio>>{},
          )
          as Map<String, List<_i8.Audio>>);

  @override
  List<String> get externalPlaylistIDs =>
      (super.noSuchMethod(
            Invocation.getter(#externalPlaylistIDs),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  List<_i8.Audio> get externalPlaylistAudios =>
      (super.noSuchMethod(
            Invocation.getter(#externalPlaylistAudios),
            returnValue: <_i8.Audio>[],
          )
          as List<_i8.Audio>);

  @override
  List<_i8.Audio> get playlistsAudios =>
      (super.noSuchMethod(
            Invocation.getter(#playlistsAudios),
            returnValue: <_i8.Audio>[],
          )
          as List<_i8.Audio>);

  @override
  Map<String, String> get downloads =>
      (super.noSuchMethod(
            Invocation.getter(#downloads),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  int get feedsWithDownloadsLength =>
      (super.noSuchMethod(
            Invocation.getter(#feedsWithDownloadsLength),
            returnValue: 0,
          )
          as int);

  @override
  List<String> get podcastFeedUrls =>
      (super.noSuchMethod(
            Invocation.getter(#podcastFeedUrls),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  Map<String, List<_i8.Audio>> get podcasts =>
      (super.noSuchMethod(
            Invocation.getter(#podcasts),
            returnValue: <String, List<_i8.Audio>>{},
          )
          as Map<String, List<_i8.Audio>>);

  @override
  int get podcastsLength =>
      (super.noSuchMethod(Invocation.getter(#podcastsLength), returnValue: 0)
          as int);

  @override
  List<String> get favoriteAlbums =>
      (super.noSuchMethod(
            Invocation.getter(#favoriteAlbums),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  void addLikedAudio(_i8.Audio? audio) => super.noSuchMethod(
    Invocation.method(#addLikedAudio, [audio]),
    returnValueForMissingStub: null,
  );

  @override
  void addLikedAudios(List<_i8.Audio>? audios) => super.noSuchMethod(
    Invocation.method(#addLikedAudios, [audios]),
    returnValueForMissingStub: null,
  );

  @override
  bool isLiked(_i8.Audio? audio) =>
      (super.noSuchMethod(
            Invocation.method(#isLiked, [audio]),
            returnValue: false,
          )
          as bool);

  @override
  bool isLikedAudios(List<_i8.Audio>? audios) =>
      (super.noSuchMethod(
            Invocation.method(#isLikedAudios, [audios]),
            returnValue: false,
          )
          as bool);

  @override
  void removeLikedAudio(_i8.Audio? audio, [bool? notify = true]) =>
      super.noSuchMethod(
        Invocation.method(#removeLikedAudio, [audio, notify]),
        returnValueForMissingStub: null,
      );

  @override
  void removeLikedAudios(List<_i8.Audio>? audios) => super.noSuchMethod(
    Invocation.method(#removeLikedAudios, [audios]),
    returnValueForMissingStub: null,
  );

  @override
  void addStarredStation(String? uuid) => super.noSuchMethod(
    Invocation.method(#addStarredStation, [uuid]),
    returnValueForMissingStub: null,
  );

  @override
  void addStarredStations(List<String?>? uuids) => super.noSuchMethod(
    Invocation.method(#addStarredStations, [uuids]),
    returnValueForMissingStub: null,
  );

  @override
  void removeStarredStation(String? uuid) => super.noSuchMethod(
    Invocation.method(#removeStarredStation, [uuid]),
    returnValueForMissingStub: null,
  );

  @override
  void unStarAllStations() => super.noSuchMethod(
    Invocation.method(#unStarAllStations, []),
    returnValueForMissingStub: null,
  );

  @override
  bool isStarredStation(String? uuid) =>
      (super.noSuchMethod(
            Invocation.method(#isStarredStation, [uuid]),
            returnValue: false,
          )
          as bool);

  @override
  bool isFavTag(String? value) =>
      (super.noSuchMethod(
            Invocation.method(#isFavTag, [value]),
            returnValue: false,
          )
          as bool);

  @override
  void addFavRadioTag(String? name) => super.noSuchMethod(
    Invocation.method(#addFavRadioTag, [name]),
    returnValueForMissingStub: null,
  );

  @override
  void removeFavRadioTag(String? name) => super.noSuchMethod(
    Invocation.method(#removeFavRadioTag, [name]),
    returnValueForMissingStub: null,
  );

  @override
  void setLastCountryCode(String? value) => super.noSuchMethod(
    Invocation.method(#setLastCountryCode, [value]),
    returnValueForMissingStub: null,
  );

  @override
  bool isFavCountry(String? value) =>
      (super.noSuchMethod(
            Invocation.method(#isFavCountry, [value]),
            returnValue: false,
          )
          as bool);

  @override
  void addFavCountryCode(String? name) => super.noSuchMethod(
    Invocation.method(#addFavCountryCode, [name]),
    returnValueForMissingStub: null,
  );

  @override
  void removeFavCountryCode(String? name) => super.noSuchMethod(
    Invocation.method(#removeFavCountryCode, [name]),
    returnValueForMissingStub: null,
  );

  @override
  void setLastLanguageCode(String? value) => super.noSuchMethod(
    Invocation.method(#setLastLanguageCode, [value]),
    returnValueForMissingStub: null,
  );

  @override
  bool isFavLanguage(String? value) =>
      (super.noSuchMethod(
            Invocation.method(#isFavLanguage, [value]),
            returnValue: false,
          )
          as bool);

  @override
  void addFavLanguageCode(String? name) => super.noSuchMethod(
    Invocation.method(#addFavLanguageCode, [name]),
    returnValueForMissingStub: null,
  );

  @override
  void removeFavLanguageCode(String? name) => super.noSuchMethod(
    Invocation.method(#removeFavLanguageCode, [name]),
    returnValueForMissingStub: null,
  );

  @override
  List<_i8.Audio>? getPlaylistById(String? id) =>
      (super.noSuchMethod(Invocation.method(#getPlaylistById, [id]))
          as List<_i8.Audio>?);

  @override
  bool isPlaylistSaved(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#isPlaylistSaved, [id]),
            returnValue: false,
          )
          as bool);

  @override
  _i3.Future<void> addPlaylist(String? id, List<_i8.Audio>? audios) =>
      (super.noSuchMethod(
            Invocation.method(#addPlaylist, [id, audios]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> addExternalPlaylists({
    required List<({List<_i8.Audio> audios, String id})>? playlists,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#addExternalPlaylists, [], {
              #playlists: playlists,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updatePlaylist({
    required String? id,
    required List<_i8.Audio>? audios,
    bool? external = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePlaylist, [], {
              #id: id,
              #audios: audios,
              #external: external,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> removePlaylist(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#removePlaylist, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void updatePlaylistName(String? oldName, String? newName) =>
      super.noSuchMethod(
        Invocation.method(#updatePlaylistName, [oldName, newName]),
        returnValueForMissingStub: null,
      );

  @override
  void moveAudioInPlaylist({
    required int? oldIndex,
    required int? newIndex,
    required String? id,
  }) => super.noSuchMethod(
    Invocation.method(#moveAudioInPlaylist, [], {
      #oldIndex: oldIndex,
      #newIndex: newIndex,
      #id: id,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void addAudiosToPlaylist({
    required String? id,
    required List<_i8.Audio>? audios,
  }) => super.noSuchMethod(
    Invocation.method(#addAudiosToPlaylist, [], {#id: id, #audios: audios}),
    returnValueForMissingStub: null,
  );

  @override
  void removeAudiosFromPlaylist({
    required String? id,
    required List<_i8.Audio>? audios,
  }) => super.noSuchMethod(
    Invocation.method(#removeAudiosFromPlaylist, [], {
      #id: id,
      #audios: audios,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void clearPlaylist(String? id) => super.noSuchMethod(
    Invocation.method(#clearPlaylist, [id]),
    returnValueForMissingStub: null,
  );

  @override
  void addExternalPlaylistID(String? value) => super.noSuchMethod(
    Invocation.method(#addExternalPlaylistID, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void removeExternalPlaylistID(String? value) => super.noSuchMethod(
    Invocation.method(#removeExternalPlaylistID, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void updateExternalPlaylistID(String? oldName, String? newName) =>
      super.noSuchMethod(
        Invocation.method(#updateExternalPlaylistID, [oldName, newName]),
        returnValueForMissingStub: null,
      );

  @override
  bool feedHasDownloads(String? feedUrl) =>
      (super.noSuchMethod(
            Invocation.method(#feedHasDownloads, [feedUrl]),
            returnValue: false,
          )
          as bool);

  @override
  void addDownload({
    required String? url,
    required String? path,
    required String? feedUrl,
  }) => super.noSuchMethod(
    Invocation.method(#addDownload, [], {
      #url: url,
      #path: path,
      #feedUrl: feedUrl,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void removeDownload({required String? url, required String? feedUrl}) =>
      super.noSuchMethod(
        Invocation.method(#removeDownload, [], {#url: url, #feedUrl: feedUrl}),
        returnValueForMissingStub: null,
      );

  @override
  void removeAllDownloads() => super.noSuchMethod(
    Invocation.method(#removeAllDownloads, []),
    returnValueForMissingStub: null,
  );

  @override
  bool isPodcastSubscribed(String? feedUrl) =>
      (super.noSuchMethod(
            Invocation.method(#isPodcastSubscribed, [feedUrl]),
            returnValue: false,
          )
          as bool);

  @override
  void addPodcast(String? feedUrl, List<_i8.Audio>? audios) =>
      super.noSuchMethod(
        Invocation.method(#addPodcast, [feedUrl, audios]),
        returnValueForMissingStub: null,
      );

  @override
  void addPodcasts(List<(String, List<_i8.Audio>)>? podcasts) =>
      super.noSuchMethod(
        Invocation.method(#addPodcasts, [podcasts]),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> updatePodcast(String? feedUrl, List<_i8.Audio>? audios) =>
      (super.noSuchMethod(
            Invocation.method(#updatePodcast, [feedUrl, audios]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updatePodcasts(
    List<({List<_i8.Audio> audios, String feedUrl})>? podcasts,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePodcasts, [podcasts]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  bool showPodcastAscending(String? feedUrl) =>
      (super.noSuchMethod(
            Invocation.method(#showPodcastAscending, [feedUrl]),
            returnValue: false,
          )
          as bool);

  @override
  _i3.Future<void> reorderPodcast({
    required String? feedUrl,
    required bool? ascending,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#reorderPodcast, [], {
              #feedUrl: feedUrl,
              #ascending: ascending,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  bool podcastUpdateAvailable(String? feedUrl) =>
      (super.noSuchMethod(
            Invocation.method(#podcastUpdateAvailable, [feedUrl]),
            returnValue: false,
          )
          as bool);

  @override
  void removePodcastUpdate(String? feedUrl) => super.noSuchMethod(
    Invocation.method(#removePodcastUpdate, [feedUrl]),
    returnValueForMissingStub: null,
  );

  @override
  void removePodcast(String? feedUrl) => super.noSuchMethod(
    Invocation.method(#removePodcast, [feedUrl]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<void> removeAllPodcasts() =>
      (super.noSuchMethod(
            Invocation.method(#removeAllPodcasts, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  bool isFavoriteAlbum(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#isFavoriteAlbum, [id]),
            returnValue: false,
          )
          as bool);

  @override
  void addFavoriteAlbum(String? id, {required dynamic Function()? onFail}) =>
      super.noSuchMethod(
        Invocation.method(#addFavoriteAlbum, [id], {#onFail: onFail}),
        returnValueForMissingStub: null,
      );

  @override
  void removeFavoriteAlbum(String? id, {required dynamic Function()? onFail}) =>
      super.noSuchMethod(
        Invocation.method(#removeFavoriteAlbum, [id], {#onFail: onFail}),
        returnValueForMissingStub: null,
      );

  @override
  bool notify(bool? saved) =>
      (super.noSuchMethod(
            Invocation.method(#notify, [saved]),
            returnValue: false,
          )
          as bool);

  @override
  _i3.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setSelectedPageId(String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setSelectedPageId, [value]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  bool isPageInLibrary(String? pageId) =>
      (super.noSuchMethod(
            Invocation.method(#isPageInLibrary, [pageId]),
            returnValue: false,
          )
          as bool);
}
